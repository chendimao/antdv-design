import{d as p,c as f,o as v,r as $,a as h,b as D,e as b,f as S,h as B,w as F,i as C,j as y,m as T}from"./main-DHTr1-Ej.js";const E=p({__name:"crudAvatar",props:{modelValue:{},validateFun:{type:Function},item:{},formState:{},formData:{},isDisabled:{type:Boolean},id:{}},emits:["update:modelValue","change"],setup(s,{emit:n}){const e=s,i=n,m=f({get:()=>e.modelValue??"",set:t=>{i("update:modelValue",t)}});v(()=>{var t,a,o,r;(a=(t=e.item)==null?void 0:t.$attrs)!=null&&a.onMounted&&((r=(o=e.item)==null?void 0:o.$attrs)==null||r.onMounted(e.item,e.formState,e.formData))});const l={onFocus:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onFocus&&e.item.$attrs.onFocus(e.item,e.formState,e.formData,t)},0)},onBlur:t=>{setTimeout(()=>{var a,o;e.validateFun&&(a=e.item)!=null&&a.name&&e.validateFun(e.item.name,{trigger:"blur"}).catch(()=>{}),(o=e.item.$attrs)!=null&&o.onBlur&&e.item.$attrs.onBlur(e.item,e.formState,e.formData,t)},0)},onInput:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onInput&&e.item.$attrs.onInput(e.item,e.formState,e.formData,t)},0)},onChange:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onChange&&e.item.$attrs.onChange(e.item,e.formState,e.formData,t),i("change",e.item,t)},0)},onError:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onError&&e.item.$attrs.onError(e.item,e.formState,e.formData,t)},0)}};return(t,a)=>{var o;const r=$("a-avatar"),u=h("render");return D(),b(r,T({disabled:t.isDisabled,src:m.value,alt:t.item.alt,gap:t.item.gap,size:t.item.size,style:t.item.style,shape:t.item.shape,draggable:t.item.draggable,crossorigin:t.item.crossorigin,loading:t.item.loading},{...t.item.$attrs,...l}),S({_:2},[B(((o=t.item)==null?void 0:o.$slots)??[],(d,c)=>({name:c,fn:F(g=>[C(y("span",null,null,512),[[u,()=>d(t.item,t.formState,t.formData,g)]])])}))]),1040,["disabled","src","alt","gap","size","style","shape","draggable","crossorigin","loading"])}}});export{E as default};
