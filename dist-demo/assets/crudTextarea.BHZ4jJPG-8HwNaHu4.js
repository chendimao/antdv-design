import{d as $,c as D,o as g,r as C,a as h,b as S,e as T,f as w,w as s,g as b,t as x,h as B,i as F,j as V,m as y}from"./main-CMpyxUYh.js";const z=$({__name:"crudTextarea",props:{modelValue:{},validateFun:{type:Function},item:{},formState:{},formData:{},isDisabled:{type:Boolean},id:{}},emits:["update:modelValue","change"],setup(u,{emit:d}){const e=u,r=d,i=D({get:()=>e.modelValue,set:t=>{r("update:modelValue",t),m.onInput(t)}});g(()=>{var t,a,o,n;(a=(t=e.item)==null?void 0:t.$attrs)!=null&&a.onMounted&&((n=(o=e.item)==null?void 0:o.$attrs)==null||n.onMounted(e.item,e.formState,e.formData))});const m={onFocus:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onFocus&&e.item.$attrs.onFocus(e.item,e.formState,e.formData,t)},0)},onBlur:t=>{setTimeout(()=>{var a,o;e.validateFun&&(a=e.item)!=null&&a.name&&e.validateFun(e.item.name,{trigger:"blur"}).catch(()=>{}),(o=e.item.$attrs)!=null&&o.onBlur&&e.item.$attrs.onBlur(e.item,e.formState,e.formData,t)},0)},onInput:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onInput&&e.item.$attrs.onInput(e.item,e.formState,e.formData,t)},0)},onChange:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onChange&&e.item.$attrs.onChange(e.item,e.formState,e.formData,t),r("change",e.item,t)},0)},onResize:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onResize&&e.item.$attrs.onResize(e.item,e.formState,e.formData,t)},0)}};return(t,a)=>{var o,n;const f=C("a-textarea"),v=h("render");return S(),T(f,y({style:{width:"100%"},disabled:t.isDisabled,allowClear:t.item.allowClear??((o=t.$crudGlobalInputConfig)==null?void 0:o.allowClear),value:i.value,"onUpdate:value":a[0]||(a[0]=l=>i.value=l)},{...t.item.$attrs,...m}),w({_:2},[t.item.afterText?{name:"addonAfter",fn:s(()=>[b(x(t.item.afterText),1)]),key:"0"}:void 0,B(((n=t.item)==null?void 0:n.$slots)??[],(l,c)=>({name:c,fn:s(p=>[F(V("div",null,null,512),[[v,()=>l(t.item,t.formState,t.formData,p)]])])}))]),1040,["disabled","allowClear","value"])}}});export{z as default};
