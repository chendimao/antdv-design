import{d as $,k as S,c as C,o as D,r as g,a as b,b as w,l as k,n as T,f as x,h as y,w as V,i as B,j as F,m as I}from"./main-DXU4O6dz.js";const N=$({__name:"crudTreeSelect",props:{modelValue:{},validateFun:{type:Function},item:{},formState:{},formData:{},isDisabled:{type:Boolean},id:{}},emits:["update:modelValue","change"],setup(d,{emit:c}){var n;(n=S())==null||n.appContext.app;const e=d,m=c,i=C({get:()=>e.modelValue,set:t=>{m("update:modelValue",t),s.onInput(t)}});D(()=>{var t,a,l,r;(a=(t=e.item)==null?void 0:t.$attrs)!=null&&a.onMounted&&((r=(l=e.item)==null?void 0:l.$attrs)==null||r.onMounted(e.item,e.formState,e.formData))});const s={onFocus:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onFocus&&e.item.$attrs.onFocus(e.item,e.formState,e.formData,t)},0)},onBlur:t=>{setTimeout(()=>{var a,l;e.validateFun&&(a=e.item)!=null&&a.name&&e.validateFun(e.item.name,{trigger:"blur"}).catch(()=>{}),(l=e.item.$attrs)!=null&&l.onBlur&&e.item.$attrs.onBlur(e.item,e.formState,e.formData,t)},0)},onInput:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onInput&&e.item.$attrs.onInput(e.item,e.formState,e.formData,t)},0)},onChange:(t,a,l)=>{setTimeout(()=>{var r;(r=e.item.$attrs)!=null&&r.onChange&&e.item.$attrs.onChange(e.item,e.formState,e.formData,t,a,l),m("change",e.item,t,a,l)},0)},onSelect:(t,a)=>{setTimeout(()=>{var l;(l=e.item.$attrs)!=null&&l.onSelect&&e.item.$attrs.onSelect(e.item,e.formState,e.formData,t,a)},0)},onSearch:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onSearch&&e.item.$attrs.onSearch(e.item,e.formState,e.formData,t)},0)},onTreeExpand:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onTreeExpand&&e.item.$attrs.onTreeExpand(e.item,e.formState,e.formData,t)},0)},onDropdownVisibleChange:t=>{setTimeout(()=>{var a;(a=e.item.$attrs)!=null&&a.onDropdownVisibleChange&&e.item.$attrs.onDropdownVisibleChange(e.item,e.formState,e.formData,t)},0)},onClear:()=>{setTimeout(()=>{var t;(t=e.item.$attrs)!=null&&t.onClear&&e.item.$attrs.onClear(e.item,e.formState,e.formData)},0)}};return(t,a)=>{var l,r,u;const f=g("a-tree-select"),p=b("render");return w(),k("div",null,[T(f,I({style:{width:"100%"},disabled:t.isDisabled,allowClear:t.item.allowClear??((l=t.$crudGlobalInputConfig)==null?void 0:l.allowClear),"show-search":(r=t.$crudGlobalInputConfig)==null?void 0:r.showSearch,"tree-data":t.item.option,"field-names":t.item.fieldNames??{label:"name",value:"value",children:"children"},"tree-default-expand-all":t.item.treeDefaultExpandAll,multiple:t.item.multiple,"tree-checkable":t.item.treeCheckable,"tree-default-expanded-keys":t.item.treeDefaultExpandedKeys,"tree-default-selected-keys":t.item.treeDefaultSelectedKeys,"tree-checked-strategy":t.item.treeCheckedStrategy,value:i.value,"onUpdate:value":a[0]||(a[0]=o=>i.value=o)},{...t.item.$attrs,...s}),x({_:2},[y(((u=t.item)==null?void 0:u.$slots)??[],(o,v)=>({name:v,fn:V(h=>[B(F("div",null,null,512),[[p,()=>o(t.item,t.formState,t.formData,h)]])])}))]),1040,["disabled","allowClear","show-search","tree-data","field-names","tree-default-expand-all","multiple","tree-checkable","tree-default-expanded-keys","tree-default-selected-keys","tree-checked-strategy","value"])])}}});export{N as default};
